{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/air-quality-visualization-main/src/components/AllYearsChart.jsx\",\n  _s = $RefreshSig$();\n// 文件：src/components/AllYearsChart.jsx\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { useInView } from 'react-intersection-observer';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Tooltip, Legend, Title } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Tooltip, Legend, Title);\nconst AllYearsChart = () => {\n  _s();\n  const {\n    ref,\n    inView\n  } = useInView({\n    triggerOnce: true,\n    threshold: 0.3\n  });\n\n  // 构造从 2016-01 到 2023-12 的标签\n  const labels = Array.from({\n    length: 96\n  }, (_, i) => {\n    const year = 2016 + Math.floor(i / 12);\n    const month = (i % 12 + 1).toString().padStart(2, '0');\n    return `${year}-${month}`;\n  });\n  const data = {\n    labels,\n    datasets: [{\n      label: 'PM2.5',\n      data: Array.from({\n        length: 96\n      }, () => Math.floor(25 + Math.random() * 20)),\n      borderColor: '#e6374e',\n      tension: 0.3,\n      pointRadius: 3,\n      fill: false\n    }, {\n      label: 'PM10',\n      data: Array.from({\n        length: 96\n      }, () => Math.floor(40 + Math.random() * 25)),\n      borderColor: '#aaa',\n      tension: 0.3,\n      pointRadius: 3,\n      fill: false\n    }, {\n      label: 'NO₂',\n      data: Array.from({\n        length: 96\n      }, () => Math.floor(15 + Math.random() * 15)),\n      borderColor: '#66c',\n      tension: 0.3,\n      pointRadius: 3,\n      fill: false\n    }, {\n      label: 'AQI',\n      data: Array.from({\n        length: 96\n      }, () => Math.floor(60 + Math.random() * 40)),\n      borderColor: '#fff',\n      tension: 0.3,\n      pointRadius: 3,\n      fill: false\n    }]\n  };\n  const options = {\n    animation: {\n      duration: 2000,\n      easing: 'easeOutQuart'\n    },\n    interaction: {\n      mode: 'index',\n      intersect: false\n    },\n    plugins: {\n      title: {\n        display: true,\n        text: '历史 PM2.5 月均浓度趋势 (2016–2023)',\n        color: '#fff',\n        font: {\n          family: 'Noto Sans SC',\n          size: 18\n        }\n      },\n      tooltip: {\n        backgroundColor: '#222',\n        titleColor: '#e6374e',\n        bodyColor: '#eee',\n        borderColor: '#e6374e',\n        borderWidth: 1,\n        displayColors: false,\n        callbacks: {\n          label: ctx => `${ctx.dataset.label}：${ctx.raw} μg/m³`\n        }\n      },\n      legend: {\n        labels: {\n          color: '#ccc',\n          font: {\n            family: 'Noto Sans SC',\n            size: 12\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        ticks: {\n          color: '#aaa'\n        },\n        grid: {\n          color: 'rgba(255,255,255,0.08)'\n        }\n      },\n      y: {\n        ticks: {\n          color: '#aaa'\n        },\n        grid: {\n          color: 'rgba(255,255,255,0.08)'\n        }\n      }\n    },\n    elements: {\n      point: {\n        hoverRadius: 6,\n        hoverBorderWidth: 3\n      },\n      line: {\n        hoverBorderWidth: 4,\n        borderWidth: 2\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    style: {\n      maxWidth: '1000px',\n      margin: '4rem auto'\n    },\n    children: inView && /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 18\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(AllYearsChart, \"oyd/E8SD7Fx4uOp6P7gVV2pVlaE=\", false, function () {\n  return [useInView];\n});\n_c = AllYearsChart;\nexport default AllYearsChart;\nvar _c;\n$RefreshReg$(_c, \"AllYearsChart\");","map":{"version":3,"names":["React","Line","useInView","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Tooltip","Legend","Title","jsxDEV","_jsxDEV","register","AllYearsChart","_s","ref","inView","triggerOnce","threshold","labels","Array","from","length","_","i","year","Math","floor","month","toString","padStart","data","datasets","label","random","borderColor","tension","pointRadius","fill","options","animation","duration","easing","interaction","mode","intersect","plugins","title","display","text","color","font","family","size","tooltip","backgroundColor","titleColor","bodyColor","borderWidth","displayColors","callbacks","ctx","dataset","raw","legend","scales","x","ticks","grid","y","elements","point","hoverRadius","hoverBorderWidth","line","style","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/air-quality-visualization-main/src/components/AllYearsChart.jsx"],"sourcesContent":["// 文件：src/components/AllYearsChart.jsx\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { useInView } from 'react-intersection-observer';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Tooltip,\n  Legend,\n  Title\n} from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Tooltip, Legend, Title);\n\nconst AllYearsChart = () => {\n  const { ref, inView } = useInView({ triggerOnce: true, threshold: 0.3 });\n\n  // 构造从 2016-01 到 2023-12 的标签\n  const labels = Array.from({ length: 96 }, (_, i) => {\n    const year = 2016 + Math.floor(i / 12);\n    const month = (i % 12 + 1).toString().padStart(2, '0');\n    return `${year}-${month}`;\n  });\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: 'PM2.5',\n        data: Array.from({ length: 96 }, () => Math.floor(25 + Math.random() * 20)),\n        borderColor: '#e6374e',\n        tension: 0.3,\n        pointRadius: 3,\n        fill: false\n      },\n      {\n        label: 'PM10',\n        data: Array.from({ length: 96 }, () => Math.floor(40 + Math.random() * 25)),\n        borderColor: '#aaa',\n        tension: 0.3,\n        pointRadius: 3,\n        fill: false\n      },\n      {\n        label: 'NO₂',\n        data: Array.from({ length: 96 }, () => Math.floor(15 + Math.random() * 15)),\n        borderColor: '#66c',\n        tension: 0.3,\n        pointRadius: 3,\n        fill: false\n      },\n      {\n        label: 'AQI',\n        data: Array.from({ length: 96 }, () => Math.floor(60 + Math.random() * 40)),\n        borderColor: '#fff',\n        tension: 0.3,\n        pointRadius: 3,\n        fill: false\n      }\n    ]\n  };\n\n  const options = {\n    animation: { duration: 2000, easing: 'easeOutQuart' },\n    interaction: { mode: 'index', intersect: false },\n    plugins: {\n      title: {\n        display: true,\n        text: '历史 PM2.5 月均浓度趋势 (2016–2023)',\n        color: '#fff',\n        font: { family: 'Noto Sans SC', size: 18 }\n      },\n      tooltip: {\n        backgroundColor: '#222',\n        titleColor: '#e6374e',\n        bodyColor: '#eee',\n        borderColor: '#e6374e',\n        borderWidth: 1,\n        displayColors: false,\n        callbacks: {\n          label: ctx => `${ctx.dataset.label}：${ctx.raw} μg/m³`\n        }\n      },\n      legend: {\n        labels: { color: '#ccc', font: { family: 'Noto Sans SC', size: 12 } }\n      }\n    },\n    scales: {\n      x: {\n        ticks: { color: '#aaa' },\n        grid: { color: 'rgba(255,255,255,0.08)' }\n      },\n      y: {\n        ticks: { color: '#aaa' },\n        grid: { color: 'rgba(255,255,255,0.08)' }\n      }\n    },\n    elements: {\n      point: { hoverRadius: 6, hoverBorderWidth: 3 },\n      line: { hoverBorderWidth: 4, borderWidth: 2 }\n    }\n  };\n\n  return (\n    <div ref={ref} style={{ maxWidth: '1000px', margin: '4rem auto' }}>\n      {inView && <Line data={data} options={options} />}\n    </div>\n  );\n};\n\nexport default AllYearsChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}